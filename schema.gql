# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Int!
  username: String!
  email: String!
  isAdmin: Boolean!
}

type Agent {
  hostname: String!
  name: String!
  version: String!
}

type Destination {
  bytes: Int!
  ip: String!
  mac: String
  packets: Int
  port: Int!
}

type Event {
  dataset: String!
  duration: Int!
  start: String!
  end: String!
  kind: String!
  category: String!
}

type Flow {
  final: Boolean!
  id: String!
  vlan: Int!
}

type Network {
  bytes: Int!
  communityId: String!
  packets: Int
  transport: String!
  direction: String!
  protocol: String!
  type: String!
}

type Source {
  bytes: Int!
  ip: String!
  mac: String
  packets: Int
  port: Int!
}

type Server {
  ip: String!
  port: Int!
  bytes: Int!
}

type FlowEvent {
  method: String!
  status: String!
  query: String!
  resource: String!
  type: String!
  agent: Agent!
  destination: Destination!
  event: Event!
  flow: Flow!
  network: Network!
  source: Source!
  server: Server!
}

type DNSQuestion {
  name: String!
  type: String!
  class: String!
}

type DNSFlags {
  authoritative: Boolean!
  truncatedResponse: Boolean!
  recursionDesired: Boolean!
  recursionAvailable: Boolean!
  authenticData: Boolean!
  checkingDisabled: Boolean!
}

type DNS {
  id: Int!
  question: DNSQuestion!
  responseCode: String!
  flags: DNSFlags!
  answersCount: Int!
  opCode: String!
  additionalsCount: Int!
  type: String!
}

type DNSFlow {
  method: String!
  status: String!
  query: String!
  resource: String!
  type: String!
  agent: Agent!
  destination: Destination!
  event: Event!
  flow: Flow!
  network: Network!
  source: Source!
  server: Server!
  dns: DNS!
}

type AuthToken {
  access_token: String!
}

type Query {
  flows: [FlowEvent!]!
  dns: [DNSFlow!]!
  users: [User!]!
}

type Mutation {
  createSuperUser(user: UserInput!): User!
  createUser(user: UserInput!): User!
  login(login: LoginInput!): AuthToken!
}

input UserInput {
  username: String!
  password: String!
  email: String!
}

input LoginInput {
  username: String!
  password: String!
}
